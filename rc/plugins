" Pathogen initializer {{{
call pathogen#runtime_append_all_bundles()
call pathogen#helptags()
" }}}
" PLUGIN SETTINGS {{{
" Latex-Suite Options

" OPTIONAL: Starting with Vim 7, the filetype of empty .tex files defaults to
" 'plaintex' instead of 'tex', which results in vim-latex not being loaded.
" The following changes the default filetype back to 'tex':
let g:tex_flavor='latex'

set ttimeoutlen=50

" Remove the Math menu from Latex-Suite
let g:Tex_MathMenus=0
let g:Tex_ViewRule_pdf='xdg-open'
let g:Tex_DefaultTargetFormat='pdf'


" Tagbar Options
" explicitly set our st plugin with F8
nnoremap <silent> <F9> :Tagbar<CR>
let Tlist_Show_One_File = 1
let g:tagbar_left = 0
let g:tagbar_type_javascript = {
    \ 'ctagsbin': '/usr/bin/ctags-exuberant',
    \ 'ctagstype' : 'JavaScript',
        \ 'kinds'     : [
        \ 'o:object',
        \ 'v:variable',
        \ 'n:number',
        \ 'f:function',
        \ 'a:array',
        \ 's:string',
        \ 'b:boolean'
    \ ]
\ }

"UndoTree
map <silent> <F12> :MundoToggle<CR>



" NETRW {{{
" absolute width of netrw window
let g:netrw_winsize = -28
" do not display info on the top of window
let g:netrw_banner = 0
" tree-view
let g:netrw_liststyle = 3
" sort is affecting only: directories on the top, files below
let g:netrw_sort_sequence = '[\/]$,*'
" use the previous window to open file
let g:netrw_browse_split = 4

noremap <F8> :Vex
" }}}


" Vimspell options
let spell_root_menu="-"
let spell_executable="aspell"

" gundo toggle bindings
nnoremap <LocalLeader>u :GundoToggle<CR>

" SYNTASTIC
set statusline+=%#warningmsg#
set statusline+=%*

let g:syntastic_cpp_compiler_options = ' -std=c++11 -stdlib=libc++'
let g:syntastic_always_populate_loc_list = 0
let g:syntastic_auto_loc_list = 0
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0
let g:syntastic_disabled_filetypes=['html', 'js']
let g:syntastic_javascript_checkers = ['jshint']
let g:syntastic_shell = "/bin/bash"


" buf explorer
let g:bufExplorerShowRelativePath=1  " Show relative paths.

" vim-R
" __ turns into <--
let R_assign=2


let g:markdown_folding = 1


let g:graphql_javascript_tags = []


" turn off ctrl-] in vim-go
let g:go_def_mapping_enabled = 0

" fzf.vim
set rtp+=~/.fzf
map <Leader>g :Rg! <cword>
map <Leader>G :Rg!<space>
" Ctrl-P alike
map  :Files
map  :Rg!
map  :Buffers
command! -bang -nargs=* Rg
  \ call fzf#vim#grep(
  \   'rg --column --line-number --no-heading --color=always --smart-case '.shellescape(<q-args>), 1,
  \   <bang>0 ? fzf#vim#with_preview('up:60%')
  \           : fzf#vim#with_preview('right:50%:hidden', '?'),
  \   <bang>0)
"

" ack.vim
cnoreabbrev Ack Ack!
nnoremap <Leader>a :Ack!<Space>

" rainbow parenthesis on by default
let g:rainbow_active = 1 "0 if you want to enable it later via :RainbowToggle

" TBGS / TBGF
nnoremap <leader>f :TBGF <cword>
nnoremap <leader>s :TBGS <cword>

" Ale
" {{{

let g:ale_completion_enabled = 1
if v:version >= 800
  nnoremap <silent> K :ALEHover<CR>
  nnoremap <silent> gd :ALEGoToDefinition<CR>
  nnoremap <M-LeftMouse> <LeftMouse>:ALEGoToDefinition<CR>
  nnoremap  :ALEFindReferences<CR>

  " show type on hover
  if v:version >= 801
    set balloonevalterm
      let g:ale_set_balloons = 1
  endif
endif

" }}}

" Use deoplete.
let g:deoplete#enable_at_startup = 1


" }}}


" vim: syntax=vim
